/**
 * @fileoverview
 * (This file was autogenerated by opprotoc)
 */

window.cls || ( window.cls = {} );

/**
  * @constructor 
  */

window.cls.ServiceBase = function()
{
  // singleton
  if(arguments.callee.instance)
  {
    return arguments.callee.instance;
  }
  arguments.callee.instance = this;

  this.on_enable_success = function(){};
  this.on_window_filter_change = function(filter){};
  this.on_quit = function(){};
  this.is_implemented = false;

  var _services = null;
  var _event_map = {};
  _event_map['console-logger'] = [];
  _event_map['console-logger'][1] = 'onConsoleMessage';
  _event_map['ecmascript-debugger'] = [];
  _event_map['ecmascript-debugger'][1] = 'handleListRuntimes';
  _event_map['ecmascript-debugger'][2] = 'handleContinueThread';
  _event_map['ecmascript-debugger'][3] = 'handleEval';
  _event_map['ecmascript-debugger'][4] = 'handleExamineObjects';
  _event_map['ecmascript-debugger'][5] = 'handleSpotlightObject';
  _event_map['ecmascript-debugger'][6] = 'handleAddBreakpoint';
  _event_map['ecmascript-debugger'][7] = 'handleRemoveBreakpoint';
  _event_map['ecmascript-debugger'][8] = 'handleAddEventHandler';
  _event_map['ecmascript-debugger'][9] = 'handleRemoveEventHandler';
  _event_map['ecmascript-debugger'][10] = 'handleSetConfiguration';
  _event_map['ecmascript-debugger'][11] = 'handleGetBacktrace';
  _event_map['ecmascript-debugger'][12] = 'handleBreak';
  _event_map['ecmascript-debugger'][13] = 'handleInspectDom';
  _event_map['ecmascript-debugger'][22] = 'handleCssGetIndexMap';
  _event_map['ecmascript-debugger'][23] = 'handleCssGetAllStylesheets';
  _event_map['ecmascript-debugger'][24] = 'handleCssGetStylesheet';
  _event_map['ecmascript-debugger'][25] = 'handleCssGetStyleDeclarations';
  _event_map['ecmascript-debugger'][26] = 'handleGetSelectedObject';
  _event_map['ecmascript-debugger'][27] = 'handleSpotlightObjects';
  _event_map['ecmascript-debugger'][29] = 'handleReleaseObjects';
  _event_map['ecmascript-debugger'][14] = 'onRuntimeStarted';
  _event_map['ecmascript-debugger'][15] = 'onRuntimeStopped';
  _event_map['ecmascript-debugger'][16] = 'onNewScript';
  _event_map['ecmascript-debugger'][17] = 'onThreadStarted';
  _event_map['ecmascript-debugger'][18] = 'onThreadFinished';
  _event_map['ecmascript-debugger'][19] = 'onThreadStoppedAt';
  _event_map['ecmascript-debugger'][20] = 'onHandleEvent';
  _event_map['ecmascript-debugger'][21] = 'onObjectSelected';
  _event_map['ecmascript-debugger'][28] = 'onParseError';
  _event_map['ecmascript-logger'] = [];
  _event_map['ecmascript-logger'][1] = 'handleConfigure';
  _event_map['ecmascript-logger'][2] = 'onNewScript';
  _event_map['exec'] = [];
  _event_map['exec'][1] = 'handleExec';
  _event_map['exec'][2] = 'handleGetActionInfoList';
  _event_map['exec'][3] = 'handleSetupScreenWatcher';
  _event_map['exec'][5] = 'handleSendMouseAction';
  _event_map['http-logger'] = [];
  _event_map['http-logger'][1] = 'onRequest';
  _event_map['http-logger'][2] = 'onResponse';
  _event_map['scope'] = [];
  _event_map['scope'][3] = 'handleConnect';
  _event_map['scope'][4] = 'handleDisconnect';
  _event_map['scope'][5] = 'handleEnable';
  _event_map['scope'][6] = 'handleDisable';
  _event_map['scope'][7] = 'handleInfo';
  _event_map['scope'][8] = 'handleQuit';
  _event_map['scope'][10] = 'handleHostInfo';
  _event_map['scope'][11] = 'handleMessageInfo';
  _event_map['scope'][0] = 'onServices';
  _event_map['scope'][1] = 'onQuit';
  _event_map['scope'][2] = 'onConnectionLost';
  _event_map['scope'][9] = 'onError';
  _event_map['window-manager'] = [];
  _event_map['window-manager'][1] = 'handleGetActiveWindow';
  _event_map['window-manager'][2] = 'handleListWindows';
  _event_map['window-manager'][3] = 'handleModifyFilter';
  _event_map['window-manager'][4] = 'onWindowUpdated';
  _event_map['window-manager'][5] = 'onWindowClosed';
  _event_map['window-manager'][6] = 'onWindowActivated';
  _event_map['window-manager'][7] = 'onWindowLoaded';

  var _status_map = [];
  _status_map[0] = "OK";
  _status_map[1] = "Conflict";
  _status_map[2] = "Unsupported Type";
  _status_map[3] = "Bad Request";
  _status_map[4] = "Internal Error";
  _status_map[5] = "Command Not Found";
  _status_map[6] = "Service Not Found";
  _status_map[7] = "Out Of Memory";
  _status_map[8] = "Service Not Enabled";
  _status_map[9] = "Service Already Enabled";

  var _type_map = [];
  _type_map[1] = "command"; 
  _type_map[2] = "response"; 
  _type_map[3] = "event"; 
  _type_map[4] = "error";

  var _handle_scope_message = function(service, message, command, status, tag)
  {
    if(ini.debug)
    {
      debug.log_events(service, message, command, status, tag);
    }
    /* for debugging *
    opera.postError(
      'service: ' + service +'\n' + 
      'command: ' + _event_map[service][command] + '\n' + 
      'tag: ' + tag + '\n' +
      'status: ' + status + '\n' +
      'message: ' + JSON.stringify(message)
      )
    /* */
    if( !tagManager.handle_message(tag, status, message) )
    {
      _services[service][_event_map[service][command]](status, message);
    }
  }

  // static methods

  arguments.callee.get_event_map = function()
  {
    return _event_map;
  }

  arguments.callee.get_status_map = function()
  {
    return _status_map;
  }

  arguments.callee.get_type_map = function()
  {
    return _type_map;
  }

  arguments.callee.get_generic_message_handler = function()
  {
    return _handle_scope_message;
  }

  arguments.callee.register_services = function(namespace)
  {
    _services = namespace;
  }

}